{"version":3,"sources":["logo.svg","PlanetItem.js","Favorites.js","NavLink.js","MainNavigation.js","Planets.js","App.js","reportWebVitals.js","index.js"],"names":["PlanetItem","props","useState","check","setcheck","favoriteHandler","event","target","checked","func","Planet","arr","map","e","id","isFavourite","console","log","find","item","cellspacing","name","type","onChange","Favorites","fav","items","NavLinks","className","to","exact","MainNavigation","Fragment","Planets","url","params","error","response","isLoading","makeRequest","axios","message","onClick","reload","data","p","App","path","bool","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbcd4fe1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React,{useState} from 'react';\r\nimport './Common.css';\r\nconst PlanetItem = props => {\r\n  var fav=[];\r\n  const [check,setcheck]=useState(true);\r\n  const favoriteHandler = (event) => {\r\n      debugger;\r\n      //fav.push(props.Planet)\r\n      if(event.target.checked)\r\n      props.func(props.Planet,true);\r\n      else{\r\n      props.func(props.Planet,false);\r\n      props.arr.map(e=>e.id==props.Planet.id?e.isFavourite=false:true)\r\n      setcheck(false);\r\n    }\r\n    console.log(event); // send this to the backend!\r\n  };\r\n  function checkPlanet(item) {\r\n    debugger;\r\n     if(item.id == props.Planet.id && item.isFavourite && check) {\r\n       return true;\r\n     }\r\n     return false;\r\n  }\r\n  if (props.arr.find(checkPlanet)){\r\n    return (\r\n      \r\n          <table cellspacing=\"10\">\r\n              \r\n                  <tr>\r\n              <td>{props.Planet.id}</td>\r\n              <td>{props.Planet.name}</td>\r\n              <td><input type=\"checkbox\" id=\"yes\" name=\"favorite\"  onChange={favoriteHandler}  checked/>\r\n\r\n    </td>\r\n          </tr>\r\n      </table>\r\n  )}\r\n  else{\r\n      return(\r\n    <table cellspacing=\"10\">\r\n              \r\n    <tr>\r\n<td>{props.Planet.id}</td>\r\n<td>{props.Planet.name}</td>\r\n<td><input type=\"checkbox\" id=\"yes\" name=\"favorite\"  onChange={favoriteHandler}/>\r\n\r\n</td>\r\n</tr>\r\n</table>);\r\n  }\r\n\r\n}\r\n\r\nexport default PlanetItem;","import React from 'react';\r\n\r\nimport PlanetItem from './PlanetItem'\r\n\r\nconst Favorites = props => {\r\n  return (\r\n<table>\r\n              {props.fav.map(items=>(items.isFavourite?\r\n                  <tr>\r\n              <td>{items.id}</td>\r\n              <td>{items.name}</td>\r\n              \r\n          </tr>:null))}\r\n      </table>  );\r\n};\r\n\r\nexport default Favorites;","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './NavLink.css';\r\n\r\nconst NavLinks = props => {\r\n\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          Planets\r\n        </NavLink>\r\n      </li>\r\n      <li>\r\n      <NavLink to=\"/favorites\" exact>\r\n          Favorites\r\n          </NavLink>\r\n      </li>\r\n        \r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport NavLinks from './NavLink';\r\n\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation =()=>{\r\n  return (\r\n    <React.Fragment>\r\n     \r\n        <nav className=\"main-navigation__drawer-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n\r\n      \r\n    </React.Fragment>\r\n  );\r\n  }\r\n\r\nexport default MainNavigation;\r\n","import React from 'react';\r\nimport PlanetItem from './PlanetItem';\r\nimport { AxiosProvider, Request, Get, Delete, Head, Post, Put, Patch, withAxios } from 'react-axios'\r\nconst Planets = props => {\r\n  debugger;\r\n  return (\r\n<Get url=\"https://assignment-machstatz.herokuapp.com/planet\" params={{}}>\r\n        {(error, response, isLoading, makeRequest, axios) => {\r\n          if(error) {\r\n            return (<div>Something bad happened: {error.message} <button onClick={() => makeRequest({ params: { reload: true } })}>Retry</button></div>)\r\n          }\r\n          else if(isLoading) {\r\n            return (<div>Loading...</div>)\r\n          }\r\n          else if(response !== null) {\r\n              {debugger}\r\n              var arr=[];\r\n              arr=response.data;\r\n            return (\r\n                <React.Fragment>\r\n                <table>\r\n          <tr><td><center><b>ID</b></center></td>\r\n                    <td><center><b>Name</b></center></td>\r\n                    <td><center><b>Favorite</b></center></td>\r\n                    </tr>\r\n                    </table>\r\n                {arr.map(p=>(<PlanetItem Planet= {p} fav=\"0\" func={props.func} arr={props.fav}/>))}\r\n                </React.Fragment>\r\n                )\r\n          }\r\n          return (<div>Default message before request is made.</div>)\r\n        }}\r\n      </Get>  );\r\n};\r\n\r\nexport default Planets;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Favorites from './Favorites';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\nimport MainNavigation from './MainNavigation';\nimport Planets from './Planets';\nfunction App() {\n  var arr=[];\n  const handlerfunc=(item,bool)=>{\n    if(bool){\n    item.isFavourite=true;\n    arr.push(item);\n    }\n    else\n    arr.map(e=>e.id==item.id?e.isFavourite=false:true)\n    debugger;\n  }\n  return (\n    <div className=\"App\">\n      <Router>\n        \n          <MainNavigation />\n          <Route path=\"/\" exact>\n              <Planets func={handlerfunc} fav={arr}/>\n            </Route>\n          <Route path=\"/Favorites\" exact>\n              <Favorites fav={arr}/>\n            </Route>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}